;###################
;### main layout ###
;###################

(defwidget bar []
    (centerbox
	(workspaces)
	(music)
	(sidestuff)
    )
)

(defwidget dashboard []
    (eventbox
	:onclick "eww close dashboard"

	(box
	    :class "dash_main"

	    (button
		:class "dash_button"

		"dashboard todo"
	    )
	    (button
		:class "dash_button"

		"dashboard todo"
	    )
	)
    )
)

;###############
;### widgets ###
;###############

(defwidget workspaces []
    (box
	:class "workspaces"

	:space-evenly false
	:halign "left"
	:spacing 6

	(literal
	    :content
	    workspaces_layout
	)
	"|"
	(window_title_bar)
    )
)

(defwidget window_title_bar []
    (box
	:class "window_title"

	(label
	    :class {window_title == "" ? "empty" : "active"}
	    :text window_title
	)
    )
)

(defwidget music []
    (box
	:space-evenly false
	:halign "center"

	:class {music_status == "Playing" ? "music"
	    : music_status == "Paused"  ? "music_paused"
	    : "no_music"
	}

	(button
	    :class "music_bar"	
	    :onclick "scripts/audio/player.sh play-pause"

	    {music_status == "Playing" ? "󰝚  ${music}"
	    :music_status == "Paused"  ? "󰝛  ${music}"
	    :""}
	)

	(button
	    :class "music_prev"
	    :onclick "scripts/audio/player.sh previous"
	    ""
	)

	(button
	    :class "music_next"
	    :onclick "scripts/audio/player.sh next"
	    ""
	)
    )
)

(defwidget sidestuff []
    (box
	:class "sidestuff"

	:space-evenly false
	:halign "end"
	:spacing 6
	
	(audio)
	(mic)
	;(battery)
	(time_bar)
	(tray)
	(dashboard_button)
	(session)
    )
)

(defwidget audio []
    (box
	(eventbox
	    :onscroll "scripts/audio/set.sh vol {}"

	    (button
		:class {volume < 0 ? "audio_muted" : "audio"}

		:onclick "scripts/audio/mute.sh vol"
		:onrightclick "scripts/audio/settings.sh vol"

		{volume < 0 ?
		    "󰖁  ${-volume - 1}%" :
		    "  ${volume}%"
		}
	    )
	)
    )
)

(defwidget mic []
    (box
	(eventbox
	    :onscroll "scripts/audio/set.sh mic {}"

	    (button
		:class {mic_vol < 0 ? "mic_muted" : "mic"}
		:onclick "scripts/audio/mute.sh mic"
		:onrightclick "scripts/audio/settings.sh mic"

		{mic_vol < 0 ?
		    "󰍭  ${-mic_vol - 1}%" :
		    "  ${mic_vol}%"
		}
	    )
	)
    )
)

(defwidget battery []
    (box
	:class "battery"

	(_battery
            :charge {EWW_BATTERY["BAT0"].capacity}
	    :status {EWW_BATTERY["BAT0"].status}
	)
    )
)

(defwidget _battery [charge status]
    (box
	(label
	    :text "${status == 'Charging' ?
	    (
		charge <= 10 ? '󰢜' : charge <= 20 ? '󰂆' :
		charge <= 30 ? '󰂇' : charge <= 40 ? '󰂈' :
		charge <= 50 ? '󰢝' : charge <= 60 ? '󰂉' :
		charge <= 70 ? '󰢞' : charge <= 80 ? '󰂊' :
		charge <= 90 ? '󰂋' : '󰂅'
	    ) : (
		charge <= 10 ? '󰁺' : charge <= 20 ? '󰁻' :
		charge <= 30 ? '󰁼' : charge <= 40 ? '󰁽' :
		charge <= 50 ? '󰁾' : charge <= 60 ? '󰁿' :
		charge <= 70 ? '󰂀' : charge <= 80 ? '󰂁' :
		charge <= 90 ? '󰂂' : '󰁹'
	    )
	} ${charge}%")
    )
)

(defwidget tray []
    (systray
	:class "systray"
	:spacing 6
    )
)

(defwidget time_bar []
    (box
	:class "time"

	(label
	    :text time
	)
    )
)

(defwidget dashboard_button []
    (box
	(button
	    :class "dashboard_button"
	    :onclick "scripts/toggle_dashboard.sh"
	    ""
	)
    )
)

(defwidget session []
    (box
	(button
	    :class "session"
	    :onclick "pgrep wlogout || wlogout &"
	    ""
	)
    )
)

;#################
;### variables ###
;#################

(deflisten workspaces_layout
    "scripts/workspaces/hyprland.sh"
)

(deflisten window_title
    :initial ""
    "scripts/workspaces/hyprland_title.sh"
)

(deflisten music
    :initial ""
    "playerctl --follow metadata --format '{{ title }}' || true"
)

(deflisten music_status
    "playerctl --follow status"
)

(deflisten volume
    :initial "0"
    "scripts/audio/get_vol.sh"
)

(deflisten mic_vol
    :initial "0"
    "scripts/audio/get_mic.sh"
)

(defpoll time
    :interval "1s"
    "date '+%d %b %Y, %H:%M:%S'"
)

;###############
;### windows ###
;###############

(defwindow bar
    :monitor 0
    :windowtype "dock"

    :geometry (geometry
	:x "0%"
        :y "0%"
        :width "100%"
        :height "3.3%"
        :anchor "top center"
    )

    :reserve (struts :side "top" :distance "3.3%")
    :exclusive true

    (bar)
)

(defwindow dashboard
    :monitor 0
    :windowtype "desktop"
    :stacking "overlay"

    :geometry (geometry
	:x "0%"
        :y "0%"
        :width "100%"
        :height "100%"
        :anchor "top center"
    )

    (dashboard)
)
